{"version":3,"sources":["components/Pretest/styles.js","components/Pretest/PretestCode.jsx","hooks/useSubject.jsx","components/Auth/AuthHelperMethods.jsx","components/Home/Home.jsx","components/Pretest/Question.jsx","components/Pretest/PretestQuestions.jsx","hooks/usePretestAnswers.jsx","components/Pretest/Pretest.jsx","components/InformationPage/InformationPage.jsx","components/Auth/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Pre","styled","div","pre","Line","LineNo","span","LineContent","global","window","Prism","require","PretestCode","props","pretestId","React","useState","code","setCode","useEffect","codeSnippets","hasOwnProperty","defaultProps","theme","language","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","useSubject","session","sessionStorage","getItem","JSON","stringify","subject","helpType","username","parse","subjectState","setSubjectState","newSubject","setItem","axios","fetch","method","url","data","params","Home","setSubject","navigate","useNavigate","onClick","Question","id","tag","onChange","e","onQuestionChange","fontSize","fontWeight","question","console","log","checked","answers","answer","index","check","name","type","defaultChecked","PretestQuestions","pretestAnswers","getPretestAnswers","setPretestAnswers","questions","origQuestions","setOrigQuestions","currQuestions","setCurrQuestions","showNextButton","setShowNextButton","showPrevButton","setShowPrevButton","buttonClicked","setButtonClicked","maxPretestId","setMaxPretestId","generateQuestions","Math","max","Object","keys","nextButton","questionsTemp","tmpButtonClicked","length","slice","undefined","forEach","element","questionId","target","indexOf","nextPretestTask","parseInt","location","href","correct","Pretest","useParams","InformationPage","text","generateHelpText","Login","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c45cf9b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  font-family: sans-serif;\n  text-align: center;\n`;\n\nexport const Pre = styled.pre`\n  text-align: left;\n//   margin: 1em 0;\n  padding: 0.5em;\n  overflow: scroll;\n  // min-height: 100%;\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n  margin: 0;\n  grid-column: 1;\n`;\n\nexport const Line = styled.div`\n  display: table-row;\n  font-size: 70%;\n`;\n\nexport const LineNo = styled.span`\n  display: table-cell;\n  text-align: right;\n  padding-right: 1em;\n  user-select: none;\n  opacity: 0.5;\n`;\n\nexport const LineContent = styled.span`\n  display: table-cell;\n  \n`;\n","import React, {useEffect} from 'react'\nimport { Pre, Line, LineNo, LineContent } from \"./styles\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/vsDark\";\nimport Prism from \"prism-react-renderer/prism\";\n\nimport codeSnippets from './code_snippets.json';\n\n(typeof global !== \"undefined\" ? global : window).Prism = Prism;\n\nrequire(\"prismjs/components/prism-java\");\n\n\nfunction PretestCode(props) {\n\n    const pretestId = props.pretestId;\n\n    const [code, setCode] = React.useState('');\n\n    useEffect(() => {\n        if(!codeSnippets.hasOwnProperty(pretestId))Â {\n            setCode('');\n            return;\n        }\n        setCode(codeSnippets[pretestId]);\n    }, [pretestId])\n\n    return(\n        <Highlight {...defaultProps} theme={theme} code={code} language=\"java\">\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n          <Pre className={className} style={style}>\n            {tokens.map((line, i) => (\n              <Line key={i} {...getLineProps({ line, key: i })}>\n                <LineNo>{i + 1}</LineNo>\n                <LineContent>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </LineContent>\n              </Line>\n            ))}\n          </Pre>\n        )}\n      </Highlight>\n    )\n}\n\nexport default PretestCode;","import {useState} from 'react';\n\nexport const useSubject = () => {\n    const session = window.sessionStorage.getItem('subject') || JSON.stringify({subject: -1, helpType: -1, username: \"\"});\n\n    const [subjectState, setSubjectState] = useState(JSON.parse(session));\n\n    const setSubject = (newSubject) => {\n        window.sessionStorage.setItem('subject', JSON.stringify({...subjectState, ...newSubject}));\n        setSubjectState({...subjectState, ...newSubject});\n    }\n\n    const subject = subjectState;\n\n    return [subject, setSubject];\n}","import { React, useSubject } from \"../../hooks\";\n\nconst axios = require(\"axios\");\nconst domain = 'http://localhost:3001';\n\nconst subject = window.sessionStorage.getItem('subject') || {subject: -1, helpType: -1, username: \"\"};\n\nconst setSubject = (newSubject) => {\n    window.sessionStorage.setItem('subject', JSON.stringify({...subject, ...newSubject}));\n}\n\n\nconst isAuthenticated = () => {\n    return fetch('post', `/auth/isAuthenticated`, subject);\n}\n\nconst fetch = (method, url, data) => {\n    return axios({\n        method: method,\n        url: domain + url,\n        data: method === 'post' ? {...subject, ...data} : null,\n        params: method === 'get' ? {...subject, ...data} : null\n    });\n    // return axios.get(domain + url, \n    //     {\n    //         params: {\n    //             'test': 'test',\n    //         }\n    //     });\n}\n\nexport {isAuthenticated, fetch};","import {React, useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {isAuthenticated} from '../Auth/AuthHelperMethods';\n\nimport {useSubject} from '../../hooks/useSubject';\n\nimport './Home.css';\n\nfunction Home(){\n    \n    const [setSubject] = useSubject();\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        isAuthenticated();\n    });\n\n    const startPretest = () => {\n        navigate('/master-study-system/pretest/1');        \n    }\n\n    const testSetSubject = () => {\n        setSubject({subject: 1, username: \"tacopady\"});\n    }\n\n    const testSetHelpType = () => {\n        setSubject({helpType: 1});\n    }\n\n    const testSetSubjectAndHelpType = () => {\n        setSubject({subject: 2, helpType: 2});\n    }\n\n    return (\n        <div className='container'>\n            <h1>Information</h1>\n            <div className='informationText'>\n                <p>You will now be faced with X tasks. These tasks are meant for detemining your level of programming expertise.</p>\n                <br />\n                <p>The questions will be in a multiple choice format. When you are finished answering the questions, press âsubmit and next problemâ to get to the next problem</p>\n            </div>\n            <button className='startButton' onClick={() => startPretest()}>Start pretest</button>\n            <button onClick={() => testSetSubject()}>Test set subject</button>\n            <button onClick={() => testSetHelpType()}>Test set help type</button>\n            <button onClick={() => testSetSubjectAndHelpType()}>Test set subject and help type</button>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport {FormGroup, Input, Label} from 'reactstrap';\n\nconst Question = (props) => {\n\n    const generateAnswers = () => {\n        console.log(props.checked);\n        return props.answers.map((answer, index) => (\n                <FormGroup key={index} check>\n                    <Input name={'radio' + props.id} type=\"radio\" id={index} defaultChecked = {index == props.checked}/>\n                    {' '}\n                    <Label check>\n                        {answer}\n                    </Label>\n                </FormGroup>\n            )\n        )\n    }\n\n    return (\n        <div className=\"question\" id={\"question\" + props.id}>\n            <FormGroup tag=\"fieldset\" onChange={(e) => {props.onQuestionChange(e)}}>\n                <legend style={{fontSize: \"medium\", fontWeight: \"bold\"}}>{props.question}</legend>\n                {generateAnswers()}\n            </FormGroup>\n        </div>\n    );\n}\n\nexport default Question;","import React, { useEffect } from 'react';\n\nimport { usePretestAnswers } from '../../hooks';\n\nimport {Form} from 'reactstrap';\nimport questions from './questions.json';\nimport Question from './Question';\n\nfunction PretestQuestions(props) {\n\n    const pretestId = props.pretestId;\n\n    const [getPretestAnswers, setPretestAnswers] = usePretestAnswers();\n    const [origQuestions, setOrigQuestions] = React.useState(getPretestAnswers(pretestId) || questions);\n    const [currQuestions, setCurrQuestions] = React.useState([]);\n    const [showNextButton, setShowNextButton] = React.useState(false);\n    const [showPrevButton, setShowPrevButton] = React.useState(false);\n    const [buttonClicked, setButtonClicked] = React.useState(-1);\n    const [maxPretestId, setMaxPretestId] = React.useState(-1);\n\n\n    useEffect(() => {\n        generateQuestions();\n        setMaxPretestId(Math.max(...Object.keys(origQuestions)));\n    }, [])\n\n    const generateQuestions = (nextButton = true) => {\n        if(!origQuestions.hasOwnProperty(pretestId))Â {\n            setCurrQuestions(undefined);\n            return;\n        }\n\n        let questionsTemp = origQuestions[pretestId].questions;\n        let tmpButtonClicked = buttonClicked + (nextButton ? 1 : -1);\n        \n\n        setShowNextButton(questionsTemp.length > tmpButtonClicked*3 + 3)\n        setShowPrevButton(tmpButtonClicked*3 >= 3)\n        setButtonClicked(tmpButtonClicked)\n        setCurrQuestions([...questionsTemp.slice(tmpButtonClicked*3, tmpButtonClicked*3+3)]);\n    }\n\n    const onQuestionChange = (e) => {\n        origQuestions[pretestId].questions.forEach(element => {\n            if(element.questionId == [e.target.name][0].slice([e.target.name][0].indexOf('radio') + 5)){\n                element.checked = e.target.id\n            }\n        })\n        setOrigQuestions(origQuestions);\n        setPretestAnswers(pretestId, origQuestions);\n    }\n\n\n    const nextPretestTask = () => {\n        setPretestAnswers(pretestId, origQuestions);\n\n        if(parseInt(pretestId) < parseInt(maxPretestId)) {\n            window.location.href = `/master-study-system/pretest/${parseInt(pretestId)+1}`;\n        } else {\n            window.location.href = '/master-study-system/info';\n        }\n    }\n\n    return(\n        <div className={props.className}>\n            {currQuestions !== undefined ?\n             <Form className=\"questionsForm\">\n                {currQuestions.map((question) => (<Question key={question.questionId} id={question.questionId} question={question.question} answers={question.answers} correct={question.correct} onQuestionChange={onQuestionChange} checked = {question.checked}/>))}\n            </Form> : \n            <h1>There are no questions for this pretest task</h1>}\n            <div className=\"buttons\">\n                {!showPrevButton && showNextButton && <div></div>}\n                {showPrevButton && <button id='prevButton' onClick={() => {generateQuestions(false)}}>Prev</button>}\n                {!showNextButton && maxPretestId == pretestId && <button id='submitButton' onClick={() => nextPretestTask()}>Submit</button>}\n                {!showNextButton && maxPretestId > pretestId && <button id='nextPretestTaskButton' onClick={() => nextPretestTask()}>Submit and next</button>}\n                {showNextButton && <button id='nextButton' onClick={() => {generateQuestions()}}>Next</button>}\n            </div>\n        </div>\n    )\n}\n\nexport default PretestQuestions;","export const usePretestAnswers = () => {\n    // const session = window.sessionStorage.getItem(`pretest${pretestId}`) || JSON.stringify([]);\n\n    // const [pretestAnswers, setPretestAnswers] = useState(session);\n\n\n    // const [pretestAnswers, setPretestAnswers] = useState(pretestAnswers);\n\n    const getPretestAnswers = (pretestId) => {\n        const session = window.sessionStorage.getItem(`pretest${pretestId}`);\n        return JSON.parse(session);\n    }\n\n    const setPretestAnswers = (pretestId, pretestAnswers) => {\n        window.sessionStorage.setItem(`pretest${pretestId}`, JSON.stringify(pretestAnswers));\n    }\n\n    return [getPretestAnswers, setPretestAnswers];\n}","import React from 'react'\nimport { useParams } from \"react-router-dom\";\n\nimport PretestCode from './PretestCode';\n\nimport './Pretest.css'\nimport PretestQuestions from './PretestQuestions';\n\nfunction Pretest() {\n    const { pretestId } = useParams()\n\n    return (\n        <div className='main'>\n            <PretestCode pretestId={pretestId} />\n            <PretestQuestions className='right' pretestId={pretestId} />\n        </div>\n    )\n}\n\nexport default Pretest;","import React from 'react';\n\nimport { useSubject } from '../../hooks/useSubject';\n\nconst InformationPage = () => {\n    const [subject] = useSubject();\n\n    console.log(subject);\n\n    const startStudy = () => {\n        window.location.href = '/master-study-system/study/task/1';\n    }\n\n    const generateHelpText = () => {\n        let text = '';\n\n        switch(subject.helpType) {\n            case 0:\n                text = `You will not get any help during the tasks.`;\n                break;\n            case 1:\n                text = `During the tasks, you will be able to see an expert programmer's eye gaze beside your code snippets. Please use this as help just the way you like.`;\n                break;\n            case 2:\n                text = `During the tasks, you will have the opportunity to get help in the form of an expert's eye gaze. The help can be enabled by pressing the \"Get help\" button. \"Hide help\" hides the eye gaze.`;\n                break;\n            case 3:\n                text = `Some of the tasks you are about to face will have help in the form of an expert's eye gaze.`\n                break;\n            default:\n                text = `Unknown help`;\n        }\n        return <p>{text}</p>\n    }\n\n    return (\n        <div className='container'>\n        <h1>Info about the tasks</h1>\n        <div className='informationText'>\n            <p>You will now be faced with X Java code snippets.</p>\n            <br />\n            <p>Your task is to either debug or comprehend the given code. The problems will be labeled whether it is a debugging or comprehension task.</p>\n            <br />\n            <p>There are no time limit. Answer each question the best you can.</p>\n            <h2>Help during the tasks</h2>\n            {generateHelpText()}\n        </div>\n        <button className='startButton' onClick={() => startStudy()}>Start test</button>\n    </div>\n    );\n}\n\nexport default InformationPage;","import {React, useEffect} from 'react'\nimport { useSubject } from '../../hooks'\nimport { isAuthenticated, fetch } from './AuthHelperMethods'\n\nconst Login = () => {\n    const [subject, setSubject] = useSubject();\n\n    useEffect(() => {\n        fetch('get', '/login', subject);\n    });\n\n    return (\n        <h1>Login</h1>\n    )\n}\n\nexport default Login;","import Home from './components/Home/Home';\nimport Pretest from './components/Pretest/Pretest';\nimport InformationPage from './components/InformationPage/InformationPage';\nimport Login from './components/Auth/Login';\n\nimport { PrivateRoute } from './components/PrivateRoute/PrivateRoute';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/master-study-system/Info\" element={<InformationPage />} />\n        <Route path=\"/master-study-system/pretest/:pretestId\" element={<Pretest />} />\n        <Route path=\"/master-study-system/login\" element={<Login />}/>\n        <Route path=\"/master-study-system\" element={<Home />}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}